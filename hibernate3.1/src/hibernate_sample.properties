
# 在 hibernate.properties 檔案中時，參數是具有 hibernate 字首的，而 hibernate.cfg.xml 檔案中是沒有的


# 【Hibernate 連接池參數】

hibernate.connection.driver_class = com.mysql.jdbc.Driver

hibernate.connection.url = jdbc:mysql://localhost:3306/hibernate3.1?characterEncoding=UTF-8

hibernate.connection.username = root

hibernate.connection.password = 19786779

# SQL 方言類別。各種資料庫間的SQL 敘述有輕微的區別，該參數設定使用哪種 SQL 方言。
hibernate.dialect = org.hibernate.dialect.MySQLDialect

# 是否在控制台顯示 SQL 敘述。只顯示 DML 與查詢敘述，不顯示DDL。
hibernate.show_sql = true

hibernate.hbm2ddl.auto = create

hibernate.current_session_context_class = thread


# 是否格式化 SQL 敘述
# hibernate.format_sql=true

# 是否顯示 SQL 註釋。SQL 註釋將使 SQL 敘述更容易讀
# hibernate.use_sql_comments

# 預設的資料庫 Schema
# hibernate.default_schema

# 預設的資料庫 Catalog
# hibernate.default_catalog

# SessionFactory 啟動後將把資料來源綁定到以該屬性值命名的 JDNI 資源上。例如：jndi/composite/name
# hibernate.session_factory_name

# 使用外連接(out join)獲得節點屬性(多對一 與 一對多 屬性)的最大獲得深度。
# 0:表示不使用外連接
# 推薦： 0 ～ 3 之間
# hibernate.max_fetch_depth=1
 

# 更新資料時是否按照主鍵值大小順序更新。同時性很高的系統中，按順序更新能減少鎖死
# hibernate.order_updates=true


# true:清空記錄後，註鍵將從0開始
# hibernate.use_identifer_rollback=true

# true:Hibernate 會產生一些靜態資料輔助提高性能
# hibernate.generate_statistics=true







# C3P0 是個開放原始碼的連接池，Hibernate 的 lib 包裡附帶著 C3P0。
# 只要在 Hibernate 參數裡設定 hibernate.c3p0.* 參數，
# Hibernate 就自動使用 C3P0 作為連接池實現。
hibernate.c3p0.min_size=5
hibernate.c3p0.max_size=20
hibernate.c3p0.timeout=1800
hibernate.c3p0.max_statements=50




# 【JNDI 資料來源參數】
# JNDI 資料來源名稱
# hibernate.connection.datasource=

# JDNI 資料來源的提供者(可選)
# hibernate.jndi.url=

# JNDI 資料來源的實現類別(可選)
# hibernate.jndi.class=

# 使用者名稱
# hibernate.connection.username=

# 使用者密碼
# hibernate.connection.password=



<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<!-- Generated by MyEclipse Hibernate Tools.                   -->
<hibernate-configuration>

<session-factory>

	<!-- 指定使用 MySQL 資料庫格式的SQL 敘述 -->
	<property name="dialect">
		org.hibernate.dialect.MySQLDialect
	</property>

	<!-- 資料庫連接 URL  -->
	<property name="connection.url">
		jdbc:mysql://localhost:3306/hibernate?characterEncoding=UTF-8
	</property>

	<!-- 資料庫驅動類別 -->
	<property name="connection.driver_class">
		com.mysql.jdbc.Driver
	</property>

	<!-- 使用者名稱 -->
	<property name="connection.username">root</property>

	<!-- 密碼  -->
	<property name="connection.password">19786779</property>

	<!-- 連接池大小(最大連接數) -->
	<!--
		Hibernate 內建的連接池比較簡簡，效率有限，僅僅用於學習和示範目的。
		<property name="connection.pool_size" >10</property>
	-->

	<!-- 連接池大小(最大連接數) -->
	<!-- 
		C3P0 是個開放原始碼的連接池，Hibernate 的 lib 包裡附帶著 C3P0。
		只要在 Hibernate 參數裡設定 hibernate.c3p0.* 參數，
		Hibernate 就自動使用 C3P0 作為連接池實現。
	-->
	<property name="c3p0.min_size">5</property>
	<property name="c3p0.max_size">20</property>
	<property name="c3p0.timeout">1800</property>
	<property name="c3p0.max_statements">50</property>




	<!-- 指定在控制台列印產生的SQL敘述  -->
	<property name="show_sql">true</property>

	<!-- 指定Hibernate 啟動的時候自動建立表格  -->
	<property name="hbm2ddl.auto">create</property>
	<!--
		hbm2ddl.auto 設定值
		1.create: 載入 SessionFactory 時建立表結構。如果原表結構存在，則先刪除原表結構。
		如果 classpath 目錄下有 import.sql 檔案，建立表結構後會執行 import.sql 裡的SQL 敘述。
		2.create-drop:載入 SessionFactory 時建立表結構，移除 SessionFactory 時(一般為程式退出時)刪除表結構。
		如果 classpath 根目錄有 import.sql 檔案，建立表結構會執行 import.sql 裡的SQL 敘述。
		3.update:載入SessionFactory 時檢查表結構，如果與 Entity 不一致，則更新表結構。
		4.validate:載入 SessionFactory 時檢查表結構。
	-->

	<!-- 要加這一句， 否則可能會遇到例外 -->
	<property name="current_session_context_class">thread</property>
	<!-- 
		1. thread： Tomcat 容器
		2. jta：JBoss 容器
	-->


	<!-- 指定 Cat 類別為 Hibernate 實體類別  -->
	<mapping class="com.hibernate.bean.Cat"       />
	<mapping class="com.hibernate.bean.Person2"   />
	<mapping class="com.hibernate.bean.Person2_1" />
	<mapping class="com.hibernate.bean.Email"     />


</session-factory>

</hibernate-configuration>
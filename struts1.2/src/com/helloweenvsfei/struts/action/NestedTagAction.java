/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.helloweenvsfei.struts.action;

import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.helloweenvsfei.struts.bean.Person;
import com.helloweenvsfei.struts.bean.Person1;
import com.helloweenvsfei.struts.dao.PersonDAO;
import com.helloweenvsfei.struts.form.NestedTagForm;
import com.helloweenvsfei.struts.form.PersonForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-09-2012
 * 
 * XDoclet definition:
 * @struts.action path="/nestedTag" name="nestedTagForm" input="/form/nestedTag.jsp" scope="request" validate="true"
 */
public class NestedTagAction extends Action {
	/*
	 * Generated Methods
	 */

	
	
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) throws Exception{
	  NestedTagForm nestedTagForm = (NestedTagForm) form;
		
	  String action = nestedTagForm.getAction();
	  if("add".equals(action)){
		return add(mapping,form,request,response);    // 主要處理 增加人員
	  }else if("list".equals(action)){
		return list(mapping,form,request,response);   // 主要處理 列出人員
	  }else{}
			
      return mapping.getInputForward();  // 轉向輸入頁面
	} // end execute

	

	
	
	
	
	
	
	
	
	
	// 主要處理 增加人員
	private ActionForward add(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response) throws Exception{
	
	  NestedTagForm nestedTagForm = (NestedTagForm) form;
	  
	  Person1 person = nestedTagForm.getPerson();  // 封裝好的Person
	  
	  // 從 Struts 中獲得資料源以及資料庫連接
	  Connection conn = getDataSource(request).getConnection();
	  
	  // 呼叫 DAO 層模型
	  PersonDAO personDAO = new PersonDAO();
	  
	  // 儲存進資料庫
	  personDAO.addPerson(conn,person);       // 儲存使用者資訊

	  request.setAttribute("person",person);  // 放進 request,供JSP 使用

	  return mapping.findForward("success");  // 轉向"成功頁面"
	} // end add
	
	
	
	
	
	
	
	
	
	// 主要處理 列出人員
	private ActionForward list(ActionMapping mapping,ActionForm form,HttpServletRequest request,HttpServletResponse response) throws Exception{
	  
	  // 從 Struts 中獲得資料源以及資料庫連接
	  Connection conn = getDataSource(request).getConnection();
		
	  // 呼叫 DAO 層模型
	  PersonDAO personDAO = new PersonDAO();
	  
	  List<Person1> personList = personDAO.listPersons(conn);  // 列出使用者資訊
	  
	  request.setAttribute("personList",personList);           // 放進 request,供JSP 使用
	  
	  return mapping.findForward("list");	 // 轉向"列表頁面"
	} // end list
	
	
	
	
	
	
	
	
}